<?xml version="1.0" encoding="utf-8"?>
  <section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="Hooks">
<title>Hooks</title>
<section xml:id="page-abstract">
<title>Page Abstract</title>
<para>  Hooks provide a mechanism to extend Nova with custom code through a
  plugin mechanism.
</para>
<para>
  Named hooks are added to nova code via a decorator that will lazily
  load plugin code matching the name. The loading works via setuptools
  <ulink url="http://pythonhosted.org/setuptools/pkg_resources.html#entry-points">entry
  points</ulink>.
</para>
</section>
<section xml:id="what-are-hooks-good-for">
  <title>What are hooks good for?</title>
  <para>
    Hooks are good for anchoring your custom code to Nova internal APIs.
  </para>
</section>
<section xml:id="what-are-hooks-not-good-for">
  <title>What are hooks NOT good for?</title>
  <para>
    Hooks should not be used when API stability is a key factor.
    Internal APIs may change. Consider using a notification driver if
    this is important to you.
  </para>
</section>
<section xml:id="declaring-hooks-in-the-nova-codebase">
  <title>Declaring hooks in the Nova codebase</title>
  <para>
    The following example declares a <emphasis>resize_hook</emphasis>
    around the <emphasis>resize_instance</emphasis> method:
  </para>
  <programlisting>
from nova import hooks

@hooks.add_hook(&quot;resize_hook&quot;)
def resize_instance(self, context, instance, a=1, b=2):
    ...
</programlisting>
  <para>
    Hook objects can now be attached via entry points to the
    <emphasis>resize_hook</emphasis>.
  </para>
</section>
<section xml:id="adding-hook-object-code">
  <title>Adding hook object code</title>
  <orderedlist numeration="arabic">
    <listitem>
      <para>
        Setup a Python package with a setup.py file.
      </para>
    </listitem>
    <listitem>
      <para>
        Add the following to the setup.py setup call:
      </para>
      <programlisting>
entry_points = [
    'nova.hooks': [
        'resize_hook': your_package.hooks.YourHookClass,
    ]
]
</programlisting>
    </listitem>
    <listitem>
      <para>
        <emphasis>YourHookClass</emphasis> should be an object with
        <emphasis>pre</emphasis> and/or <emphasis>post</emphasis>
        methods:
      </para>
      <programlisting>
class YourHookClass(object):

    def pre(self, *args, **kwargs):
        ....

    def post(self, rv, *args, **kwargs):
        ....
</programlisting>
    </listitem>
  </orderedlist>
</section>
</section>
