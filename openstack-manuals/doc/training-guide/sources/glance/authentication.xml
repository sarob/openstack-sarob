<?xml version="1.0" encoding="utf-8"?>
  <section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="Authentication-With-Keystone">
<title>Authentication With Keystone</title>
<section xml:id="page-abstract">
<title>Page Abstract</title>
<para>  Glance may optionally be integrated with Keystone. Setting this up is
  relatively straightforward, as the Keystone distribution includes the
  necessary middleware. Once you have installed Keystone and edited your
  configuration files, newly created images will have their owner
  attribute set to the tenant of the authenticated users, and the
  is_public attribute will cause access to those images for which it is
  false to be restricted to only the owner, users with admin context, or
  tenants/users with whom the image has been shared.
</para>
</section>
<section xml:id="configuring-the-glance-servers-to-use-keystone">
  <title>Configuring the Glance servers to use Keystone</title>
  <para>
    Keystone is integrated with Glance through the use of middleware.
    The default configuration files for both the Glance API and the
    Glance Registry use a single piece of middleware called
    <literal>unauthenticated-context</literal>, which generates a
    request context containing blank authentication information. In
    order to configure Glance to use Keystone, the
    <literal>authtoken</literal> and <literal>context</literal>
    middlewares must be deployed in place of the
    <literal>unauthenticated-context</literal> middleware. The
    <literal>authtoken</literal> middleware performs the authentication
    token validation and retrieves actual user authentication
    information. It can be found in the Keystone distribution.
  </para>
</section>
<section xml:id="configuring-glance-api-to-use-keystone">
  <title>Configuring Glance API to use Keystone</title>
  <para>
    Configuring Glance API to use Keystone is relatively straight
    forward. The first step is to ensure that declarations for the two
    pieces of middleware exist in the
    <literal>glance-api-paste.ini</literal>. Here is an example for
    <literal>authtoken</literal>:
  </para>
  <programlisting>
[filter:authtoken]
paste.filter_factory = keystoneclient.middleware.auth_token:filter_factory
auth_host = 127.0.0.1
auth_port = 35357
auth_protocol = http
admin_user = glance_admin
admin_tenant_name = service_admins
admin_password = password1234
</programlisting>
  <para>
    The actual values for these variables will need to be set depending
    on your situation. For more information, please refer to the
    Keystone documentation on the <literal>auth_token</literal>
    middleware, but in short:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        Those variables beginning with <literal>auth_</literal> point to
        the Keystone Admin service. This information is used by the
        middleware to actually query Keystone about the validity of the
        authentication tokens.
      </para>
    </listitem>
    <listitem>
      <para>
        The admin auth credentials (<literal>admin_user</literal>,
        <literal>admin_tenant_name</literal>,
        <literal>admin_password</literal>) will be used to retrieve an
        admin token. That token will be used to authorize user tokens
        behind the scenes.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Finally, to actually enable using Keystone authentication, the
    application pipeline must be modified. By default, it looks like:
  </para>
  <programlisting>
[pipeline:glance-api]
pipeline = versionnegotiation unauthenticated-context apiv1app
</programlisting>
  <para>
    Your particular pipeline may vary depending on other options, such
    as the image cache. This must be changed by replacing
    <literal>unauthenticated-context</literal> with
    <literal>authtoken</literal> and <literal>context</literal>:
  </para>
  <programlisting>
[pipeline:glance-api]
pipeline = versionnegotiation authtoken context apiv1app
</programlisting>
</section>
<section xml:id="configuring-glance-registry-to-use-keystone">
  <title>Configuring Glance Registry to use Keystone</title>
  <para>
    Configuring Glance Registry to use Keystone is also relatively
    straight forward. The same middleware needs to be added to
    <literal>glance-registry-paste.ini</literal> as was needed by Glance
    API; see above for an example of the <literal>authtoken</literal>
    configuration.
  </para>
  <para>
    Again, to enable using Keystone authentication, the appropriate
    application pipeline must be selected. By default, it looks like:
  </para>
  <programlisting>
[pipeline:glance-registry-keystone]
pipeline = authtoken context registryapp
</programlisting>
  <para>
    To enable the above application pipeline, in your main
    <literal>glance-registry.conf</literal> configuration file, select
    the appropriate deployment flavor by adding a
    <literal>flavor</literal> attribute in the
    <literal>paste_deploy</literal> group:
  </para>
  <programlisting>
[paste_deploy]
flavor = keystone
</programlisting>
  <blockquote>
    <para>
      <emphasis role="strong">note</emphasis>
    </para>
  </blockquote>
  <blockquote>
    <para>
      If your authentication service uses a role other than
      <literal>admin</literal> to identify which users should be granted
      admin-level privileges, you must define it in the
      <literal>admin_role</literal> config attribute in both
      <literal>glance-registry.conf</literal> and
      <literal>glance-api.conf</literal>.
    </para>
  </blockquote>
</section>
</section>
